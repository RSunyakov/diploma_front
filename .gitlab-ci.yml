
#image: cirrusci/flutter:2.10.2
#image: fischerscode/flutter:2.10.2

cache:
  paths:
    - .pub-cache/global_packages

stages:
  - test
  - build
  - build_error

variables:
  LC_ALL: "en_US.UTF-8"
  LANG: "en_US.UTF-8"
  TIME: '10'
  URL: 'https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage'
  BASE_VERSION: '1.2'
  BASE_PATH: 'build/app/outputs/flutter-apk/sphere-mobile-app'

.android_docker_image:
  image: cirrusci/flutter:3.0.2
  before_script:
    - export PATH="$PATH":"$HOME/.flutter-sdk/.pub-cache/bin"
    - export ANDROID_SDK_ROOT=/usr/lib/android-sdk
    - flutter clean
    - flutter packages pub get
    - flutter packages pub run build_runner build --delete-conflicting-outputs
  tags:
    - docker



.android_key_store:
  extends: .android_docker_image
  before_script:
    - export PATH="$PATH":"$HOME/.flutter-sdk/.pub-cache/bin"
    - export ANDROID_SDK_ROOT=/usr/lib/android-sdk
    - echo "$PLAY_STORE_UPLOAD_KEY" | base64 --decode > android/app/sirius-mobile.jks
    - cp $KEY_PROPERTIES ./android/key.properties
    - wget https://github.com/JetBrains/kotlin/releases/download/v1.6.10/kotlin-compiler-1.6.10.zip -O /tmp/a.zip
    - unzip /tmp/a.zip -d /opt
    - export PATH="$PATH:/opt/kotlinc/bin"
    - wget https://services.gradle.org/distributions/gradle-7.3.2-bin.zip -P /tmp
    - unzip -d /opt/gradle /tmp/gradle-7.3.2-bin.zip
    - export PATH=$PATH:/opt/gradle/gradle-7.3.2/bin 

test-machine:
  extends: .android_docker_image
  stage: test
  script:
    - flutter pub global activate junitreport
    - export PATH="$PATH":"$HOME/.pub-cache/bin"
    - flutter analyze
    - flutter test --machine --reporter json | tojunit -o report.xml
  artifacts:
    when: always
    reports:
      junit:
        - report.xml
    expire_in: 5 days
  except:
    - stage

test-coverage:
  extends: .android_docker_image
  stage: test
  script:
    - apt-get install lcov -y
    - flutter test --coverage
    - genhtml coverage/lcov.info --output=coverage
  artifacts:
    paths:
      - coverage/
    expire_in: 5 days
  except:
    - stage


build:
  stage: build
  extends: .android_key_store
  variables:
    TIME: '50'
    URL_MSG: 'https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage'
    URL_DOC: 'https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendDocument'
    TEXT: 'Deploy status: ‚úÖ%0A%0AProject: Sphere mobile app ‚òÄÔ∏è %0Aüëâ URL:+$CI_PROJECT_URL/pipelines/$CI_PIPELINE_ID/%0Aüéã Branch:+$CI_COMMIT_REF_SLUG%0A%0Aüíæ Deploy artifacts:'
  script:
    - curl -s --max-time $TIME -d "chat_id=$TELEGRAM_USER_ID&disable_web_page_preview=1&text=üöÄ Start deploy Sphere mobile app ‚òÄÔ∏è" $URL_MSG
    - cp $APP_ENV_FILE ./assets/.env
    - cp $GOOGLE_SERVICES ./android/app/google-services.json
    - flutter clean
    - flutter packages pub get
    - flutter packages pub run build_runner build --delete-conflicting-outputs
    #- flutter build apk --no-tree-shake-icons --build-name=1.0.$CI_PIPELINE_ID --build-number=$CI_PIPELINE_ID --flavor=prod
    - flutter build apk --build-name=1.0.$CI_PIPELINE_ID --build-number=$CI_PIPELINE_ID
    - mv build/app/outputs/flutter-apk/app-release.apk $BASE_PATH_$BASE_VERSION.$CI_PIPELINE_ID.apk
    - curl -s --max-time $TIME -d "chat_id=$TELEGRAM_USER_ID&disable_web_page_preview=1&text=$TEXT" $URL_MSG
    - curl -F "chat_id=$TELEGRAM_USER_ID" -F "document=@./$BASE_PATH_$BASE_VERSION.$CI_PIPELINE_ID.apk" $URL_DOC
  artifacts:
    paths:
      - $BASE_PATH_$BASE_VERSION.$CI_PIPELINE_ID.apk
      # - build/app/outputs/bundle/prodRelease/app-prod-release.aab
    expire_in: 5 days
  only:
    - stage

build_error:
  image: cirrusci/flutter:2.10.2
  stage: build_error
  variables:
    TIME: '10'
    URL: 'https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage'
    TEXT: 'Deploy status: ‚ùå%0A%0AProject: Sphere mobile app ‚òÄÔ∏è%0AURL:+$CI_PROJECT_URL/pipelines/$CI_PIPELINE_ID/%0ABranch:+$CI_COMMIT_REF_SLUG'
  script:
    - curl -s --max-time $TIME -d "chat_id=$TELEGRAM_USER_ID&disable_web_page_preview=1&text=$TEXT" $URL 
  when: on_failure
  only:
    - stage
  tags:
    - docker